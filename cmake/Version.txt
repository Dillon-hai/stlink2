# Determine project version
# * Using Git
# * Local .version file
find_package (Git QUIET)

if (GIT_FOUND AND EXISTS "${CMAKE_SOURCE_DIR}/.git")
	# Working off a git repo, using git versioning
	# Check if HEAD is pointing to a tag
	execute_process (
		COMMAND             "${GIT_EXECUTABLE}" describe --always
		WORKING_DIRECTORY   "${CMAKE_SOURCE_DIR}"
		OUTPUT_VARIABLE     STLINK2_VERSION
		OUTPUT_STRIP_TRAILING_WHITESPACE)

	# If the sources have been changed locally, add -dirty to the version.
	execute_process (
	COMMAND             "${GIT_EXECUTABLE}" diff --quiet
	WORKING_DIRECTORY   "${CMAKE_SOURCE_DIR}"
	RESULT_VARIABLE     res)

	if (res EQUAL 1)
		set (STLINK2_VERSION "${STLINK2_VERSION}-dirty")
	endif()
endif()

string(REGEX REPLACE "^(0|[1-9][0-9]*)[.](0|[1-9][0-9]*)[.](0|[1-9][0-9]*)(-[.0-9A-Za-z-]+)?([+][.0-9A-Za-z-]+)?$"
                     "\\1;\\2;\\3" STLINK2_VERSION_LIST "${STLINK2_VERSION}")
list(LENGTH STLINK2_VERSION_LIST len)
if(len EQUAL 3)
	list(GET STLINK2_VERSION_LIST 0 STLINK2_VERSION_MAJOR)
	list(GET STLINK2_VERSION_LIST 1 STLINK2_VERSION_MINOR)
	list(GET STLINK2_VERSION_LIST 2 STLINK2_VERSION_PATCH)
elseif(EXISTS ${CMAKE_SOURCE_DIR}/.version)
	#  If git is not available (e.g. when building from source package)
	#  we can extract the package version from .version file.
	file (STRINGS .version STLINK2_VERSION)

	# TODO create function to extract semver from file or string and check if it is correct instead of copy-pasting
	string(REGEX REPLACE "^(0|[1-9][0-9]*)[.](0|[1-9][0-9]*)[.](0|[1-9][0-9]*)(-[.0-9A-Za-z-]+)?([+][.0-9A-Za-z-]+)?$"
                     "\\1;\\2;\\3" STLINK2_VERSION_LIST ${STLINK2_VERSION})
	list(GET STLINK2_VERSION_LIST 0 STLINK2_VERSION_MAJOR)
	list(GET STLINK2_VERSION_LIST 1 STLINK2_VERSION_MINOR)
	list(GET STLINK2_VERSION_LIST 2 STLINK2_VERSION_PATCH)
else()
	message(FATAL_ERROR "Unable to determine project version")
endif()

if (${CMAKE_BUILD_TYPE} MATCHES "Debug")
	message(STATUS "stlink2 version: ${STLINK2_VERSION}")
	message(STATUS "           Major ${STLINK2_VERSION_MAJOR} Minor ${STLINK2_VERSION_MINOR} Patch ${STLINK2_VERSION_PATCH}")
endif()

# CMake compatability
set(PROJECT_VERSION_MAJOR "${STLINK2_VERSION_MAJOR}" CACHE INTERNAL "Project major version")
set(PROJECT_VERSION_MINOR "${STLINK2_VERSION_MINOR}" CACHE INTERNAL "Project minor version")
set(PROJECT_VERSION_PATCH "${STLINK2_VERSION_PATCH}" CACHE INTERNAL "Project patch version")
set(PROJECT_VERSION "${STLINK2_VERSION}" CACHE INTERNAL "CMake Project Version")
